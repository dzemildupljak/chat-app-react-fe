[{"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\store.js":"1","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\reducers\\auth.js":"2","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\reducers\\index.js":"3","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\Chat\\Chat.jsx":"4","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\protectedRoute\\ProtectedRoute.js":"5","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\actions\\type.js":"6","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\actions\\auth.js":"7","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\reducers\\user.js":"8","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\actions\\user.js":"9","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\user.service.js":"10","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\axios.js":"11","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\localStorageService.js":"12","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\index.js":"13","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\Login\\Login.jsx":"14","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\auth.service.js":"15","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\App.js":"16","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\Register\\Register.jsx":"17","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\layout\\Layout.js":"18","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\UserList\\UserList.jsx":"19","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\message.service.js":"20","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\MessageForm\\MessageForm.jsx":"21"},{"size":354,"mtime":1609004969133,"results":"22","hashOfConfig":"23"},{"size":766,"mtime":1609107468926,"results":"24","hashOfConfig":"23"},{"size":460,"mtime":1609096409960,"results":"25","hashOfConfig":"23"},{"size":2874,"mtime":1609181580928,"results":"26","hashOfConfig":"23"},{"size":1175,"mtime":1609106550365,"results":"27","hashOfConfig":"23"},{"size":520,"mtime":1609168221305,"results":"28","hashOfConfig":"23"},{"size":1233,"mtime":1609107436239,"results":"29","hashOfConfig":"23"},{"size":712,"mtime":1609168341936,"results":"30","hashOfConfig":"23"},{"size":1065,"mtime":1609178968183,"results":"31","hashOfConfig":"23"},{"size":539,"mtime":1609098856167,"results":"32","hashOfConfig":"23"},{"size":1724,"mtime":1609101713247,"results":"33","hashOfConfig":"23"},{"size":1027,"mtime":1609100888573,"results":"34","hashOfConfig":"23"},{"size":500,"mtime":1607284635870,"results":"35","hashOfConfig":"23"},{"size":2478,"mtime":1609164394681,"results":"36","hashOfConfig":"23"},{"size":722,"mtime":1609107980790,"results":"37","hashOfConfig":"23"},{"size":861,"mtime":1609162778164,"results":"38","hashOfConfig":"23"},{"size":2563,"mtime":1609164470830,"results":"39","hashOfConfig":"23"},{"size":301,"mtime":1609165523899,"results":"40","hashOfConfig":"23"},{"size":12134,"mtime":1609180698183,"results":"41","hashOfConfig":"23"},{"size":649,"mtime":1609180842162,"results":"42","hashOfConfig":"23"},{"size":1769,"mtime":1609181277657,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pkvodg",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\store.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\reducers\\auth.js",["96","97"],"import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  AUTH_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAIL,\r\n} from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_USER_SUCCESS:\r\n    case REGISTER_USER_FAIL: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    }\r\n    case LOGIN_FAIL: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case AUTH_USER: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    }\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n}\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\reducers\\index.js",[],["98","99"],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\Chat\\Chat.jsx",["100","101"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MessageForm from \"../MessageForm/MessageForm\";\r\nimport messageService from \"../../services/message.service\";\r\nimport \"./Chat.css\";\r\nimport axios from \"axios\";\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst Chat = (props) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const receiver = useSelector((state) => state.user.receiver);\r\n  const sender = useSelector((state) => state.user.currentUser);\r\n  useEffect(() => {\r\n    if (receiver && sender) {\r\n      // const msgsgs = messageService.getAllMessages(sender.id, receiver);\r\n      axios\r\n        .get(API_URL + \"api/message-list/\" + receiver + \"/\" + sender.id)\r\n        .then((res) => {\r\n          setMessages(res.data);\r\n        });\r\n    }\r\n    console.log(messages);\r\n  }, [sender, receiver]);\r\n\r\n  return (\r\n    <div className=\"col-8 px-0\">\r\n      <div className=\"bg-gray px-4 py-2 bg-light recent\">\r\n        <p>Not yet loaded current user</p>\r\n      </div>\r\n      <div className=\"px-4 py-5 chat-box bg-white\">\r\n        {receiver ? (\r\n          messages.length > 0 ? (\r\n            messages.map((m) => {\r\n              if (m.sender === sender.id) {\r\n                return (\r\n                  <div className=\"media w-50 ml-auto mb-3\" key={m.id}>\r\n                    <div className=\"media-body\">\r\n                      <div className=\"bg-primary rounded py-2 px-3 mb-2\">\r\n                        <p className=\"text-small mb-0 text-white\">\r\n                          {m.message}\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"small text-muted\">12:00 PM | Aug 13</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              } else {\r\n                return (\r\n                  <div className=\"media w-50 mb-3\" key={m.id}>\r\n                    <img\r\n                      src=\"https://res.cloudinary.com/mhmd/image/upload/v1564960395/avatar_usae7z.svg\"\r\n                      alt=\"user\"\r\n                      width=\"50\"\r\n                      className=\"rounded-circle\"\r\n                    />\r\n                    <div className=\"media-body ml-3\">\r\n                      <div className=\"bg-light rounded py-2 px-3 mb-2\">\r\n                        <p className=\"text-small mb-0 text-muted\">\r\n                          {m.message}\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"small text-muted\">12:00 PM | Aug 13</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })\r\n          ) : (\r\n            <h2>Nemate poruka sa ovim korisnikom</h2>\r\n          )\r\n        ) : (\r\n          <h1>Nije odabran primalac</h1>\r\n        )}\r\n      </div>\r\n      <MessageForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\protectedRoute\\ProtectedRoute.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\actions\\type.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\actions\\auth.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\reducers\\user.js",["102"],"import {\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAIL,\r\n  LOAD_USER_LIST_SUCCESS,\r\n  MESSAGE_RECEIVER,\r\n} from \"../actions/type\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOAD_USER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        currentUser: payload,\r\n      };\r\n    }\r\n    case LOAD_USER_LIST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        userList: payload,\r\n      };\r\n    }\r\n    case MESSAGE_RECEIVER: {\r\n      return {\r\n        ...state,\r\n        receiver: payload,\r\n      };\r\n    }\r\n    case LOAD_USER_FAIL:\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n}\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\actions\\user.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\user.service.js",["103","104"],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\axios.js",["105"],"import axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LocalStorageService from \"../services/localStorageService\";\r\n\r\n// LocalstorageService\r\nconst localStorageService = LocalStorageService.getService();\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\n// const router = useHistory();\r\n\r\n// Add a request interceptor\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorageService.getAccessToken();\r\n    if (token) {\r\n      config.headers[\"Authorization\"] = \"Bearer \" + token;\r\n    }\r\n    // config.headers['Content-Type'] = 'application/json';\r\n    return config;\r\n  },\r\n  (error) => {\r\n    Promise.reject(error);\r\n  }\r\n);\r\n\r\n//Add a response interceptor\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  function (error) {\r\n    const originalRequest = error.config;\r\n\r\n    if (\r\n      error.response.status === 401 &&\r\n      originalRequest.url === API_URL + \"api/token/\"\r\n    ) {\r\n      // router.push(\"/login\");\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      const refreshToken = localStorageService.getRefreshToken();\r\n      axios\r\n        .post(API_URL + \"api/token/refresh/\", {\r\n          refresh: refreshToken,\r\n        })\r\n        .then((res) => {\r\n          if (res.status === 200) {\r\n            localStorageService.setAccessToken(res.data);\r\n            axios.defaults.headers.common[\"Authorization\"] =\r\n              \"Bearer \" + localStorageService.getAccessToken();\r\n            return axios(originalRequest);\r\n          }\r\n        });\r\n      return;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\localStorageService.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\index.js",[],["106","107"],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\Login\\Login.jsx",["108","109"],"import React, { useEffect } from \"react\";\r\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport LocalStorageService from \"../../services/localStorageService\";\r\nimport * as Yup from \"yup\";\r\nimport \"./Login.css\";\r\nimport { login } from \"../../actions/auth\";\r\n\r\nconst Login = (props) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const localStorageService = LocalStorageService.getService();\r\n  const accToken = localStorageService.getAccessToken();\r\n  const refToken = localStorageService.getRefreshToken();\r\n\r\n  const loginSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .min(6, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    username: Yup.string().required(\"Required\"),\r\n  });\r\n  const handleSubmit = (values) => {\r\n    dispatch(login(values));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      return history.push(\"/chat\");\r\n    }\r\n    if (accToken && refToken) {\r\n      LocalStorageService.clearToken();\r\n    }\r\n  }, [accToken, refToken, isAuthenticated]);\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Formik\r\n            initialValues={{ username: \"\", password: \"\" }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ isSubmitting }) => {\r\n              return (\r\n                <Form className=\"login-form\">\r\n                  <label>\r\n                    Username: <Field type=\"text\" name=\"username\" />\r\n                    <ErrorMessage name=\"username\" component=\"div\" />\r\n                  </label>\r\n                  <label>\r\n                    Password:\r\n                    <Field type=\"password\" name=\"password\" />\r\n                    <ErrorMessage name=\"password\" component=\"div\" />\r\n                  </label>\r\n                  <button type=\"submit\" disabled={isSubmitting}>\r\n                    Submit\r\n                  </button>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n          <p className=\"message\">\r\n            Not registered? <Link to=\"/register\">Create an account</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\auth.service.js",["110"],"import axios from \"axios\";\r\nimport LocalStorageService from \"../services/localStorageService\";\r\nimport \"../services/axios\";\r\n\r\nconst localStorageService = LocalStorageService.getService();\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst register = async (credentials) => {\r\n  const res = await axios.post(API_URL + \"account/api/register\", credentials);\r\n  return res.data;\r\n};\r\n\r\nconst login = async (credentials) => {\r\n  const res = await axios.post(API_URL + \"api/token/\", {\r\n    username: credentials.username,\r\n    password: credentials.password,\r\n  });\r\n  return res.data;\r\n};\r\n\r\nconst logout = () => {\r\n  localStorageService.clearToken();\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\App.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\Register\\Register.jsx",["111","112","113"],"import React from \"react\";\r\nimport { Redirect, useHistory, Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport LocalStorageService from \"../../services/localStorageService\";\r\nimport * as Yup from \"yup\";\r\nimport \"./Register.css\";\r\nimport { register } from \"../../actions/auth\";\r\n\r\nconst Register = (props) => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const history = useHistory();\r\n  const localStorageService = LocalStorageService.getService();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const loginSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Required\"),\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string()\r\n      .min(6, \"Too Short!\")\r\n      .max(50, \"Too Long!\")\r\n      .required(\"Required\"),\r\n  });\r\n  const handleSubmit = (values) => {\r\n    console.log(values);\r\n    dispatch(register(values)).then(() => {\r\n      return <Redirect to=\"/chat\" />;\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"root\">\r\n      <div className=\"login-page\">\r\n        <div className=\"form\">\r\n          <Formik\r\n            initialValues={{\r\n              username: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n              first_name: \"\",\r\n              last_name: \"\",\r\n            }}\r\n            validationSchema={loginSchema}\r\n            onSubmit={handleSubmit}\r\n          >\r\n            {({ isSubmitting }) => {\r\n              return (\r\n                <Form className=\"login-form\">\r\n                  <label>\r\n                    Username: <Field type=\"text\" name=\"username\" />\r\n                    <ErrorMessage name=\"username\" component=\"div\" />\r\n                  </label>\r\n                  <label>\r\n                    Email: <Field type=\"text\" name=\"email\" />\r\n                    <ErrorMessage name=\"email\" component=\"div\" />\r\n                  </label>\r\n                  <label>\r\n                    Password:\r\n                    <Field type=\"password\" name=\"password\" />\r\n                    <ErrorMessage name=\"password\" component=\"div\" />\r\n                  </label>\r\n                  <button type=\"submit\" disabled={isSubmitting}>\r\n                    Submit\r\n                  </button>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n          <p className=\"message\">\r\n            Registered? <Link to=\"/\">Log in</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\layout\\Layout.js",[],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\UserList\\UserList.jsx",["114","115","116"],"D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\services\\message.service.js",["117"],"import axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst getAllMessages = async (sender, receiver) => {\r\n  return await axios\r\n    .get(API_URL + \"api/message-list/\" + receiver + \"/\" + sender)\r\n    .then((res) => {\r\n      console.log(\"res from gtAllMessages\", res.data);\r\n      return res.data;\r\n    });\r\n};\r\n\r\nconst createMessage = async (msg) => {\r\n  const res = await axios\r\n    .post(API_URL + \"api/message/\", msg)\r\n    .then((res) => console.log(\"Success create message\"))\r\n    .catch((err) => console.log(\"Error crate message\"));\r\n  return res;\r\n};\r\n\r\nexport default {\r\n  createMessage,\r\n  getAllMessages,\r\n};\r\n","D:\\react\\react-redux-jwt-auth\\react-redux-jwt-auth\\src\\components\\MessageForm\\MessageForm.jsx",[],{"ruleId":"118","severity":1,"message":"119","line":11,"column":1,"nodeType":"120","endLine":44,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":12,"column":17,"nodeType":"123","messageId":"124","endLine":12,"endColumn":24},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"129","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":23,"column":6,"nodeType":"132","endLine":23,"endColumn":24,"suggestions":"133"},{"ruleId":"118","severity":1,"message":"119","line":10,"column":1,"nodeType":"120","endLine":38,"endColumn":2},{"ruleId":"121","severity":1,"message":"134","line":4,"column":7,"nodeType":"123","messageId":"124","endLine":4,"endColumn":26},{"ruleId":"118","severity":1,"message":"135","line":18,"column":1,"nodeType":"120","endLine":21,"endColumn":3},{"ruleId":"121","severity":1,"message":"136","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":20},{"ruleId":"125","replacedBy":"137"},{"ruleId":"127","replacedBy":"138"},{"ruleId":"121","severity":1,"message":"139","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"130","severity":1,"message":"140","line":36,"column":6,"nodeType":"132","endLine":36,"endColumn":43,"suggestions":"141"},{"ruleId":"118","severity":1,"message":"135","line":26,"column":1,"nodeType":"120","endLine":30,"endColumn":3},{"ruleId":"121","severity":1,"message":"142","line":11,"column":9,"nodeType":"123","messageId":"124","endLine":11,"endColumn":24},{"ruleId":"121","severity":1,"message":"143","line":12,"column":9,"nodeType":"123","messageId":"124","endLine":12,"endColumn":16},{"ruleId":"121","severity":1,"message":"134","line":13,"column":9,"nodeType":"123","messageId":"124","endLine":13,"endColumn":28},{"ruleId":"121","severity":1,"message":"144","line":9,"column":18,"nodeType":"123","messageId":"124","endLine":9,"endColumn":27},{"ruleId":"130","severity":1,"message":"145","line":26,"column":6,"nodeType":"132","endLine":26,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":44,"column":17,"nodeType":"149","endLine":52,"endColumn":18},{"ruleId":"118","severity":1,"message":"135","line":22,"column":1,"nodeType":"120","endLine":25,"endColumn":3},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["150"],"no-negated-in-lhs",["151"],"'messageService' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'localStorageService' is assigned a value but never used.","Assign object to a variable before exporting as module default","'useHistory' is defined but never used.",["150"],["151"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["153"],"'isAuthenticated' is assigned a value but never used.","'history' is assigned a value but never used.","'setActive' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["154"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [sender, receiver, messages]",{"range":"161","text":"162"},"Update the dependencies array to be: [accToken, refToken, isAuthenticated, history]",{"range":"163","text":"164"},"Update the dependencies array to be: [dispatch]",{"range":"165","text":"166"},[853,871],"[sender, receiver, messages]",[1226,1263],"[accToken, refToken, isAuthenticated, history]",[846,848],"[dispatch]"]